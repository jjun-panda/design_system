{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport { MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport DefaultIcon from '@mui/icons-material/ViewList';\nimport PropTypes from 'prop-types';\nimport lodashGet from 'lodash/get';\nimport clsx from 'clsx';\nimport { useResourceDefinitions, useGetResourceLabel, useCreatePath } from 'ra-core';\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\nimport { useSidebarState } from './useSidebarState';\nimport { DashboardMenuItem } from './DashboardMenuItem';\nimport { MenuItemLink } from './MenuItemLink';\n/**\n * Renders a menu with one menu item per resource by default. You can also set menu items by hand.\n *\n * @example\n * import * as React from 'react';\n * import { Menu } from 'react-admin';\n *\n * import BookIcon from '@mui/icons-material/Book';\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n * import PeopleIcon from '@mui/icons-material/People';\n * import LabelIcon from '@mui/icons-material/Label';\n *\n * export const MyMenu = () => (\n *     <Menu>\n *         <Menu.DashboardItem />\n *         <Menu.Item to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\n *         <Menu.Item to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\n *         <Menu.Item to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\n *         <Menu.Item to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\n *     </Menu>\n * );\n */\nexport var Menu = function Menu(props) {\n  var _a;\n  var resources = useResourceDefinitions();\n  var getResourceLabel = useGetResourceLabel();\n  var createPath = useCreatePath();\n  var hasDashboard = props.hasDashboard,\n    _b = props.children,\n    children = _b === void 0 ? __spreadArray([hasDashboard ? React.createElement(DashboardMenuItem, {\n      key: \"default-dashboard-menu-item\"\n    }) : null], Object.keys(resources).filter(function (name) {\n      return resources[name].hasList;\n    }).map(function (name) {\n      return React.createElement(MenuItemLink, {\n        key: name,\n        to: createPath({\n          resource: name,\n          type: 'list'\n        }),\n        state: {\n          _scrollToTop: true\n        },\n        primaryText: getResourceLabel(name, 2),\n        leftIcon: resources[name].icon ? createElement(resources[name].icon) : React.createElement(DefaultIcon, null)\n      });\n    }), true) : _b,\n    className = props.className,\n    rest = __rest(props, [\"hasDashboard\", \"children\", \"className\"]);\n  var open = useSidebarState()[0];\n  return React.createElement(Root, __assign({\n    className: clsx((_a = {}, _a[MenuClasses.open] = open, _a[MenuClasses.closed] = !open, _a), className)\n  }, rest), children);\n};\nMenu.propTypes = {\n  className: PropTypes.string,\n  dense: PropTypes.bool,\n  hasDashboard: PropTypes.bool\n};\n// re-export MenuItem commponents for convenience\nMenu.Item = MenuItemLink;\nMenu.DashboardItem = DashboardMenuItem;\nvar PREFIX = 'RaMenu';\nexport var MenuClasses = {\n  open: \"\".concat(PREFIX, \"-open\"),\n  closed: \"\".concat(PREFIX, \"-closed\")\n};\nvar Root = styled(MenuList, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: '0.5em',\n    marginBottom: '1em'\n  }, _b[theme.breakpoints.only('xs')] = {\n    marginTop: 0\n  }, _b.transition = theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }), _b[\"&.\".concat(MenuClasses.open)] = {\n    width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH)\n  }, _b[\"&.\".concat(MenuClasses.closed)] = {\n    width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH)\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","createElement","MenuList","styled","DefaultIcon","PropTypes","lodashGet","clsx","useResourceDefinitions","useGetResourceLabel","useCreatePath","DRAWER_WIDTH","CLOSED_DRAWER_WIDTH","useSidebarState","DashboardMenuItem","MenuItemLink","Menu","props","resources","getResourceLabel","createPath","_b","children","hasDashboard","key","Object","keys","filter","name","hasList","map","to","resource","type","state","_scrollToTop","primaryText","leftIcon","icon","className","rest","Root","_a","MenuClasses","open","closed","propTypes","string","dense","bool","Item","DashboardItem","PREFIX","overridesResolver","styles","root","theme","display","flexDirection","justifyContent","marginTop","marginBottom","breakpoints","only","transitions","create","easing","sharp","duration","leavingScreen","width"],"sources":["/Users/jjun/design_system/node_modules/ra-ui-materialui/src/layout/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, createElement } from 'react';\nimport { MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport DefaultIcon from '@mui/icons-material/ViewList';\nimport PropTypes from 'prop-types';\nimport lodashGet from 'lodash/get';\nimport clsx from 'clsx';\nimport {\n    useResourceDefinitions,\n    useGetResourceLabel,\n    useCreatePath,\n} from 'ra-core';\n\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\nimport { useSidebarState } from './useSidebarState';\nimport { DashboardMenuItem } from './DashboardMenuItem';\nimport { MenuItemLink } from './MenuItemLink';\n\n/**\n * Renders a menu with one menu item per resource by default. You can also set menu items by hand.\n *\n * @example\n * import * as React from 'react';\n * import { Menu } from 'react-admin';\n *\n * import BookIcon from '@mui/icons-material/Book';\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n * import PeopleIcon from '@mui/icons-material/People';\n * import LabelIcon from '@mui/icons-material/Label';\n *\n * export const MyMenu = () => (\n *     <Menu>\n *         <Menu.DashboardItem />\n *         <Menu.Item to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\n *         <Menu.Item to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\n *         <Menu.Item to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\n *         <Menu.Item to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\n *     </Menu>\n * );\n */\nexport const Menu = (props: MenuProps) => {\n    const resources = useResourceDefinitions();\n    const getResourceLabel = useGetResourceLabel();\n    const createPath = useCreatePath();\n    const {\n        hasDashboard,\n        children = [\n            hasDashboard ? (\n                <DashboardMenuItem key=\"default-dashboard-menu-item\" />\n            ) : null,\n            ...Object.keys(resources)\n                .filter(name => resources[name].hasList)\n                .map(name => (\n                    <MenuItemLink\n                        key={name}\n                        to={createPath({\n                            resource: name,\n                            type: 'list',\n                        })}\n                        state={{ _scrollToTop: true }}\n                        primaryText={getResourceLabel(name, 2)}\n                        leftIcon={\n                            resources[name].icon ? (\n                                createElement(resources[name].icon)\n                            ) : (\n                                <DefaultIcon />\n                            )\n                        }\n                    />\n                )),\n        ],\n        className,\n        ...rest\n    } = props;\n\n    const [open] = useSidebarState();\n\n    return (\n        <Root\n            className={clsx(\n                {\n                    [MenuClasses.open]: open,\n                    [MenuClasses.closed]: !open,\n                },\n                className\n            )}\n            {...rest}\n        >\n            {children}\n        </Root>\n    );\n};\n\n// NOTE: We don't extends MenuListProps here to avoid breaking changes\nexport interface MenuProps {\n    children?: ReactNode;\n    className?: string;\n    dense?: boolean;\n    hasDashboard?: boolean;\n    [key: string]: any;\n}\n\nMenu.propTypes = {\n    className: PropTypes.string,\n    dense: PropTypes.bool,\n    hasDashboard: PropTypes.bool,\n};\n\n// re-export MenuItem commponents for convenience\nMenu.Item = MenuItemLink;\nMenu.DashboardItem = DashboardMenuItem;\n\nconst PREFIX = 'RaMenu';\n\nexport const MenuClasses = {\n    open: `${PREFIX}-open`,\n    closed: `${PREFIX}-closed`,\n};\n\nconst Root = styled(MenuList, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: '0.5em',\n    marginBottom: '1em',\n    [theme.breakpoints.only('xs')]: {\n        marginTop: 0,\n    },\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n\n    [`&.${MenuClasses.open}`]: {\n        width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH),\n    },\n\n    [`&.${MenuClasses.closed}`]: {\n        width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}