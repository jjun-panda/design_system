"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatagridEditor = void 0;
var React = __importStar(require("react"));
var ra_core_1 = require("ra-core");
var material_1 = require("@mui/material");
var FieldEditor_1 = require("./FieldEditor");
var DatagridEditor = function () {
    var translate = (0, ra_core_1.useTranslate)();
    (0, ra_core_1.useSetInspectorTitle)('ra.inspector.datagrid', { _: 'Datagrid' });
    var availableColumns = (0, ra_core_1.usePreference)('availableColumns', [])[0];
    var omit = (0, ra_core_1.usePreference)('omit', [])[0];
    var _a = (0, ra_core_1.usePreference)('columns', availableColumns
        .filter(function (column) { return !(omit === null || omit === void 0 ? void 0 : omit.includes(column.source)); })
        .map(function (column) { return column.index; })), columns = _a[0], setColumns = _a[1];
    var handleToggle = function (event) {
        if (event.target.checked) {
            // add the column at the right position
            setColumns(availableColumns
                .filter(function (column) {
                return column.index === event.target.name ||
                    columns.includes(column.index);
            })
                .map(function (column) { return column.index; }));
        }
        else {
            setColumns(columns.filter(function (index) { return index !== event.target.name; }));
        }
    };
    var handleHideAll = function () {
        setColumns([]);
    };
    var handleShowAll = function () {
        setColumns(availableColumns.map(function (column) { return column.index; }));
    };
    return (React.createElement("div", null,
        availableColumns.map(function (column) { return (React.createElement(FieldEditor_1.FieldEditor, { key: column.index, source: column.source, label: column.label, index: column.index, selected: columns.includes(column.index), onToggle: handleToggle })); }),
        React.createElement(material_1.Box, { display: "flex", justifyContent: "space-between", mx: -0.5, mt: 1 },
            React.createElement(material_1.Button, { size: "small", onClick: handleHideAll }, translate('ra.inspector.datagrid.hideAll', {
                _: 'Hide All',
            })),
            React.createElement(material_1.Button, { size: "small", onClick: handleShowAll }, translate('ra.inspector.datagrid.showAll', {
                _: 'Show All',
            })))));
};
exports.DatagridEditor = DatagridEditor;
//# sourceMappingURL=DatagridEditor.js.map