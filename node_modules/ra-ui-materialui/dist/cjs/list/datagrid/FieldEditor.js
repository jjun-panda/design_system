"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldEditor = void 0;
var React = __importStar(require("react"));
var ra_core_1 = require("ra-core");
var material_1 = require("@mui/material");
/**
 * UI to edit a field in a DatagridEditor
 */
var FieldEditor = function (props) {
    var selected = props.selected, label = props.label, onToggle = props.onToggle, source = props.source, index = props.index;
    var resource = (0, ra_core_1.useResourceContext)();
    return (React.createElement("div", { key: source },
        React.createElement("label", { htmlFor: "switch_".concat(index) },
            React.createElement(material_1.Switch, { checked: selected, onChange: onToggle, name: index, id: "switch_".concat(index), size: "small", sx: {
                    mr: 0.5,
                    ml: -0.5,
                } }),
            React.createElement(material_1.Typography, { variant: "body2", component: "span" },
                React.createElement(ra_core_1.FieldTitle, { label: label, source: source, resource: resource })))));
};
exports.FieldEditor = FieldEditor;
//# sourceMappingURL=FieldEditor.js.map